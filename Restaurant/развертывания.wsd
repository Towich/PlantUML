@startuml
node "Мобильное устройство" {
  artifact "Мобильное приложение" {
    component "Логика приложения" as AppLogic
    component "Платежная система" as PaymentSystem
    component "Google Maps" as GoogleMaps
    component "Экран авторизации" as AuthScreen
    component "Экран столов" as TablesScreen
    component "Экран блюд" as DishesScreen
    component "Экран карты" as MapScreen
    component "Экран профиля" as ProfileScreen
    component "Главное меню" as MainMenu
    component "Сетевой клиент" as NetworkClient
    component "Локальное хранилище" as LocalStorage
  }
}

node "Сервер" {
  artifact "Бэкенд" {
    component "Сетевой клиент" as NetworkClient1
    component "Серверная логика" as ServerLogic
    component "Сервис уведомлений" as Notifications
    component "Сервис отчетов" as ReportService
  }
}

node "Сервер баз данных" {
    component "Сетевой клиент" as NetworkClient2
    component "Серверная логика" as ServerLogic1
    component "СУБД PostgreSQL" as Database1
    component "База данных" as DB
}

"Мобильное устройство" --- "Сервер": HTTPS
"Сервер" --- "Сервер баз данных": HTTPS

AppLogic -(0- PaymentSystem : использует
AppLogic -(0- GoogleMaps : использует
AppLogic -(0- NetworkClient : использует
NetworkClient -(0- AppLogic : обрабатывает
AppLogic -(0- LocalStorage : использует

AuthScreen -(0- AppLogic : вызывает
TablesScreen -(0- AppLogic : вызывает
DishesScreen -(0- AppLogic : вызывает
MapScreen -(0- AppLogic : вызывает
ProfileScreen -(0- AppLogic : вызывает
MainMenu -(0- AppLogic : вызывает

NetworkClient1 -(0- ServerLogic : использует
ServerLogic -(0- NetworkClient1 : обрабатывает

ServerLogic -(0- Notifications : использует
ServerLogic -(0- ReportService : использует
NetworkClient2 -(0- ServerLogic1 : использует
ServerLogic1 -(0- NetworkClient2 : обрабатывает
ServerLogic1 -(0- Database1 : использует
Database1 -(0- DB : использует
@enduml